col4 <- colorRampPalette(c("#7F0000", "red", "#FF7F00", "yellow", "#7FFF7F",
"cyan", "#007FFF", "blue", "#00007F"))
corrplot(corr,
method = "circle",
title=opa,
tl.col = "black",
type="full",
#           sig.level = 0.0001,
sig.level = 0.01,
hclust.method = c("ward.D2"),
#           order = c("alphabet"),
order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
addrect=10,
col=col4(100),
insig = "blank")
}
par(mfrow=c(2,ncols))
for (i in 1:length(la)) {
x <- acast(la[[i]], GENOME~DINUC, value.var="NORM")
opa <- class_list[i]
corr <- cor(x)
p.mat <- cor.mtest(corr)
#  col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
#  col <- colorRampPalette(c("#4477AA", "#77AADD", "#FFFFFF", "#EE9988", "#BB4444"))
col4 <- colorRampPalette(c("#7F0000", "red", "#FF7F00", "yellow", "#7FFF7F",
"cyan", "#007FFF", "blue", "#00007F"))
corrplot(corr,
method = "circle",
title=opa,
tl.col = "black",
type="upper",
#           sig.level = 0.0001,
sig.level = 0.01,
hclust.method = c("ward.D2"),
#           order = c("alphabet"),
order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
addrect=10,
col=col4(100),
insig = "blank")
}
par(mfrow=c(2,ncols))
for (i in 1:length(la)) {
x <- acast(la[[i]], GENOME~DINUC, value.var="NORM")
opa <- class_list[i]
corr <- cor(x)
p.mat <- cor.mtest(corr)
#  col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
#  col <- colorRampPalette(c("#4477AA", "#77AADD", "#FFFFFF", "#EE9988", "#BB4444"))
col4 <- colorRampPalette(c("#7F0000", "red", "#FF7F00", "yellow", "#7FFF7F",
"cyan", "#007FFF", "blue", "#00007F"))
corrplot(corr,
method = "circle",
title=opa,
tl.col = "black",
type="upper",
#           sig.level = 0.0001,
sig.level = 0.01,
hclust.method = c("ward.D2"),
#           order = c("alphabet"),
order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
addrect=10,
col=col4(21),
insig = "blank")
}
ls()
rm(list=ls())
df <- read.table("/Users/chico/projects/KOMODO2/bin/taxon_ids.txt")
str(df)
GenerateTree <- function(taxonIds) {
taxize_class <- classification(taxonIds, db = "ncbi")
taxize_tree <- class2tree(taxize_class, check = TRUE)
plot(taxize_tree)
#  return(tree)
}
library(texize)
library(taxize)
GenerateTree()
GenerateTree(df$V1)
#taxize_class <- classification(, db = "ncbi")
?classification
species_name_vector <- df$V1
class(species_name_vector)
is.vector(species_name_vector)
taxize_class <- classification(species_name_vector, db = "ncbi")
class(taxize_class)
str(taxize_class)
taxize_class$`6238`
?class2tree
taxize_tree <- class2tree(taxize_class, check = TRUE)
class(taxize_tree)
taxize_tree$distmat
taxize_tree$phylo
plot(taxize_tree)
plot(taxize_tree)
dev.off()
plot(taxize_tree)
GenerateTree(species_name_vector)
plot(taxize_tree$phylo)
?class2tree
?corrplot
?corrplot
library(corrplot)
?corrplot
sum(15:1)
?"corrplot"
suppressPackageStartupMessages(library(corrplot))
suppressPackageStartupMessages(library(reshape2))
rm(list=ls())
infile <- "/Users/chico/projects/doutorado_tarcisio_final/bin/SIGNATURES/final_results_dinuc.txt"
df <- read.table(file=infile, sep="\t", header=TRUE)
outfile <- c("dinuc_corrplot.pdf")
x_3 <- df[,c(1,2,3,6)]
x_3$NORM <- scale(x_3$ODDS, center = TRUE, scale = TRUE)
pdf(file=outfile, width=10, height=10)
class_list <- as.list(as.matrix(unique(df$LABEL)))
la <- lapply(class_list, function(x)
x_3[x_3$LABEL == x,])
names(la) <- class_list
ncols <- (round((length(class_list)/2)))
par(mfrow=c(2,ncols))
for (i in 1:length(la)) {
x <- acast(la[[i]], GENOME~DINUC, value.var="NORM")
opa <- class_list[i]
corr <- cor(x)
p.mat <- cor.mtest(corr)
#  col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
col <- colorRampPalette(c("#4477AA", "#77AADD", "#FFFFFF", "#EE9988", "#BB4444"))
#  col4 <- colorRampPalette(c("#7F0000", "red", "#FF7F00", "yellow", "#7FFF7F",
#                             "cyan", "#007FFF", "blue", "#00007F"))
corrplot(corr,
method = "circle",
title=opa,
tl.col = "black",
type="full",
#           sig.level = 0.0001,
sig.level = 0.05/(sum(15:1)), #Bonferroni correction
hclust.method = c("average"),
order = c("alphabet"),
#          order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
#           addrect=10,
col=col(21),
insig = "blank")
}
dev.off()
outfile <- c("dinuc_corrplot.pdf")
dev.off()
x_3 <- df[,c(1,2,3,6)]
x_3$NORM <- scale(x_3$ODDS, center = TRUE, scale = TRUE)
pdf(file=outfile, width=10, height=10)
class_list <- as.list(as.matrix(unique(df$LABEL)))
la <- lapply(class_list, function(x)
x_3[x_3$LABEL == x,])
names(la) <- class_list
ncols <- (round((length(class_list)/2)))
x <- acast(df, GENOME~DINUC, value.var="NORM")
str(df)
x_3$NORM <- scale(x_3$ODDS, center = TRUE, scale = TRUE)
x <- acast(df, GENOME~DINUC, value.var="NORM")
x <- acast(x_3, GENOME~DINUC, value.var="NORM")
corr <- cor(x)
p.mat <- cor.mtest(corr)
corr <- cor(x)
p.mat <- cor.mtest(corr)
col <- colorRampPalette(c("#4477AA", "#77AADD", "#FFFFFF", "#EE9988", "#BB4444"))
corrplot(corr,
method = "circle",
title="Hosts",
tl.col = "black",
type="full",
sig.level = 0.05/(sum(15:1)), #Bonferroni correction
hclust.method = c("average"),
order = c("alphabet"),
order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
col=col(21),
insig = "blank")
corr
corr <- cor(x)
p.mat <- cor.mtest(corr)
col <- colorRampPalette(c("#4477AA", "#77AADD", "#FFFFFF", "#EE9988", "#BB4444"))
corrplot(corr,
method = "circle",
title="Hosts",
tl.col = "black",
type="full",
sig.level = 0.05/(sum(15:1)), #Bonferroni correction
hclust.method = c("average"),
order = c("alphabet"),
order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
col=col(21),
insig = "blank")
x <- acast(df, GENOME~DINUC, value.var="NORM")
opa <- class_list[i]
corr <- cor(x)
p.mat <- cor.mtest(corr)
col <- colorRampPalette(c("#4477AA", "#77AADD", "#FFFFFF", "#EE9988", "#BB4444"))
corrplot(corr,
method = "circle",
title="Hosts",
tl.col = "black",
type="full",
sig.level = 0.05/(sum(15:1)), #Bonferroni correction
hclust.method = c("average"),
order = c("alphabet"),
#         order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
col=col(21),
insig = "blank")
x <- acast(df, GENOME~DINUC, value.var="NORM")
opa <- class_list[i]
corr <- cor(x)
p.mat <- cor.mtest(corr)
x_3 <- df[,c(1,2,3,6)]
x_3$NORM <- scale(x_3$ODDS, center = TRUE, scale = TRUE)
x <- acast(df, GENOME~DINUC, value.var="NORM")
opa <- class_list[i]
corr <- cor(x)
p.mat <- cor.mtest(corr)
str(p.mat)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
x <- acast(df, GENOME~DINUC, value.var="NORM")
opa <- class_list[i]
corr <- cor(x)
p.mat <- cor.mtest(corr)
p.mat
col <- colorRampPalette(c("#4477AA", "#77AADD", "#FFFFFF", "#EE9988", "#BB4444"))
corrplot(corr,
method = "circle",
title="Hosts",
tl.col = "black",
type="full",
sig.level = 0.05/(sum(15:1)), #Bonferroni correction
hclust.method = c("average"),
order = c("alphabet"),
#         order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
col=col(21),
insig = "blank")
dev.off()
col <- colorRampPalette(c("#4477AA", "#77AADD", "#FFFFFF", "#EE9988", "#BB4444"))
corrplot(corr,
method = "circle",
title="Hosts",
tl.col = "black",
type="full",
sig.level = 0.05/(sum(15:1)), #Bonferroni correction
hclust.method = c("average"),
order = c("alphabet"),
#         order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
col=col(21),
insig = "blank")
x <- acast(df, GENOME~DINUC, value.var="NORM")
opa <- class_list[i]
corr <- cor(x)
p.mat <- cor.mtest(corr)
col <- colorRampPalette(c("#4477AA", "#77AADD", "#FFFFFF", "#EE9988", "#BB4444"))
corrplot(corr,
method = "circle",
title="Hosts",
tl.col = "black",
type="full",
sig.level = 0.05/(sum(15:1)), #Bonferroni correction
hclust.method = c("average"),
#         order = c("alphabet"),
order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
col=col(21),
insig = "blank")
plot(x_3$NORM[x_3$DINUC == "CG"])
plot(x_3$NORM[x_3$DINUC == "CG"], x_3$NORM[x_3$DINUC == "CG"],)
plot(x_3$NORM[x_3$DINUC == "CG"], x_3$NORM[x_3$DINUC == "TA"],)
dev.off()
plot(x_3$NORM[x_3$DINUC == "CG"], x_3$NORM[x_3$DINUC == "TA"],)
dev.off()
plot(x_3$NORM[x_3$DINUC == "CG"], x_3$NORM[x_3$DINUC == "TA"],)
x <- acast(df, GENOME~DINUC, value.var="NORM")
opa <- class_list[i]
corr <- cor(x)
p.mat <- cor.mtest(corr)
col <- colorRampPalette(c("#4477AA", "#77AADD", "#FFFFFF", "#EE9988", "#BB4444"))
corrplot(corr,
method = "circle",
title="Hosts",
tl.col = "black",
type="full",
sig.level = 0.05/(sum(15:1)), #Bonferroni correction
hclust.method = c("average"),
#         order = c("alphabet"),
order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
col=col(21),
insig = "blank")
plot(x_3$NORM[x_3$DINUC == "CG"], x_3$NORM[x_3$DINUC == "TA"], col=x_3$LABEL)
x_3$LABEL
df <- read.table(file=infile, sep="\t", header=TRUE)
x_3 <- df[,c(1,2,3,6)]
x_3$NORM <- scale(x_3$ODDS, center = TRUE, scale = TRUE)
x <- acast(df, GENOME~DINUC, value.var="NORM")
opa <- class_list[i]
corr <- cor(x)
p.mat <- cor.mtest(corr)
col <- colorRampPalette(c("#4477AA", "#77AADD", "#FFFFFF", "#EE9988", "#BB4444"))
corrplot(corr,
method = "circle",
title="Hosts",
tl.col = "black",
type="full",
sig.level = 0.05/(sum(15:1)), #Bonferroni correction
hclust.method = c("average"),
#         order = c("alphabet"),
order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
col=col(21),
insig = "blank")
plot(x_3$NORM[x_3$DINUC == "CG"], x_3$NORM[x_3$DINUC == "TA"], col=x_3$LABEL)
plot(x_3$NORM[x_3$DINUC == "CG"], x_3$NORM[x_3$DINUC == "TA"], col=x_3$LABEL, pch = 16)
x_3$LABEL
legend(7,4.3,unique(data$Species),col=1:length(data$Species),pch=1)
legend(7,4.3,unique(x_3$LABEL),col=1:length(x_3$LABEL),pch=1)
plot(x_3$NORM[x_3$DINUC == "CG"], x_3$NORM[x_3$DINUC == "TA"], col=x_3$LABEL, pch = 16)
legend(7,4.3,unique(x_3$LABEL),col=1:length(x_3$LABEL),pch=1)
dev.off()
plot(x_3$NORM[x_3$DINUC == "CG"], x_3$NORM[x_3$DINUC == "TA"], col=x_3$LABEL, pch = 16)
legend(7,4.3,unique(x_3$LABEL),col=1:length(x_3$LABEL),pch=1)
plot(x_3$NORM[x_3$DINUC == "CG"], x_3$NORM[x_3$DINUC == "TA"], col=x_3$LABEL, pch = 16)
infile <- "/Users/chico/projects/doutorado_tarcisio_final/bin/SIGNATURES/final_results_dinuc.txt"
df <- read.table(file=infile, sep="\t", header=TRUE)
str(df)
suppressPackageStartupMessages(library(corrplot))
suppressPackageStartupMessages(library(reshape2))
x_3 <- df[,c(1,2,3,6)]
x_3$NORM <- scale(x_3$ODDS, center = TRUE, scale = TRUE)
x <- acast(x_3, GENOME~DINUC, value.var="NORM")
corr <- cor(x)
p.mat <- cor.mtest(corr)
col <- colorRampPalette(c("#4477AA", "#77AADD", "#FFFFFF", "#EE9988", "#BB4444"))
opa = "Hosts"
corrplot(corr,
method = "circle",
title=opa,
tl.col = "black",
type="full",
#           sig.level = 0.0001,
sig.level = 0.01/(sum(15:1)), #Bonferroni
hclust.method = c("ward.D2"),
#           order = c("alphabet"),
order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
#           addrect=10,
col=col(21),
insig = "blank")
x
corr
p.mat
corrplot(corr,
method = "circle",
title=opa,
tl.col = "black",
type="full",
#           sig.level = 0.0001,
sig.level = 0.01/(sum(15:1)), #Bonferroni
hclust.method = c("ward.D2"),
#           order = c("alphabet"),
order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
#           addrect=10,
col=col(21),
insig = "blank")
str(p.mat)
x <- acast(x_3, GENOME~DINUC, value.var="NORM")
corr <- cor(x)
p.mat <- cor.mtest(corr)
opa = "Hosts"
#  col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
col <- colorRampPalette(c("#4477AA", "#77AADD", "#FFFFFF", "#EE9988", "#BB4444"))
#  col4 <- colorRampPalette(c("#7F0000", "red", "#FF7F00", "yellow", "#7FFF7F",
#                             "cyan", "#007FFF", "blue", "#00007F"))
corrplot(corr,
method = "circle",
title=opa,
tl.col = "black",
type="full",
#           sig.level = 0.0001,
sig.level = 0.01/(sum(15:1)), #Bonferroni
hclust.method = c("ward.D2"),
#           order = c("alphabet"),
order = c("hclust"),
p.mat = p.mat,
mar=c(0,0,1,0),
#           addrect=10,
col=col(21),
insig = "blank")
corrplot(corr,
method = "circle",
title=opa,
tl.col = "black",
type="full",
#           sig.level = 0.0001,
sig.level = 0.01/(sum(15:1)), #Bonferroni
hclust.method = c("ward.D2"),
#           order = c("alphabet"),
order = c("hclust"),
#         p.mat = p.mat,
mar=c(0,0,1,0),
#           addrect=10,
col=col(21),
insig = "blank")
str(p.mat)
str(p.mat$p)
mat$p
p.mat$p
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
ls()
varlist  <- paste0("rev",1:6)      # note that this is paste0, not paste
hvarlist <- paste0("hi",varlist)
hvarlist
require(data.table)
setDT(df)[,(hvarlist):=lapply(.SD,function(x)1L*(x>500)),.SDcols=varlist]
store = c("a", "b", "c", "d", "c")
rev1 = c(500, 200, 600, 400, 1200)
rev2 = c(260, 100, 450, 45, 1300)
rev3 = c(500, 150, 610, 350, 900)
rev4 = c(480, 200, 600, 750, 1000)
rev5 = c(500, 68, 750, 350, 1200)
rev6 = c(510, 80, 1000, 400, 1450)
df = data.frame(store, rev1, rev2, rev3, rev4, rev5, rev6)
df
varlist  <- paste0("rev",1:6)      # note that this is paste0, not paste
hvarlist <- paste0("hi",varlist)
varlist
str(hvarlist)
load("~/projects/KOMODO2/GO_new_complexity.RData")
suppressPackageStartupMessages(library(genbankr))
setwd("/Users/chico/projects/TaxonSampling/bin/TaxonSampling/")
smpfile = system.file("../../data/sequence.gp", package="genbankr")
gb = readGenBank(smpfile)
smpfile
smpfile = system.file("../../data/sequence.gp", package="genbankr")
smpfile
smpfile = system.file("../../data/sequence.gp", package="genbankr")
?system.file
smpfile = system.file("../../data/", package="genbankr")
smpfile
smpfile = system.file("../../data/sequence.gb", package="genbankr")
smpfile
setwd("/Users/chico/projects/TaxonSampling/data/")
smpfile = system.file("sequence.gb", package="genbankr")
smpfile
smpfile = system.file("sample.gbk", package="genbankr")
gb = readGenBank(smpfile)
gb
genes(gb)
cds(gb)
exons(gb)
variants(gb)
accession(gb)
pg = parseGenBank(smpfile)
str(pg, max.level = 1)
str(pg)
pg$SOURCE$organism
file <-("sequence.gb")
pg = parseGenBank(file)
pg
pg$SOURCE$organism
